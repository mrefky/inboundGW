apiVersion: v1
items:
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: kafka
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2023-11-23T18:32:29Z"
    generation: 1
    labels:
      app.kubernetes.io/component: kafka
      app.kubernetes.io/instance: kafka
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kafka
      helm.sh/chart: kafka-22.1.3
    name: kafka
    namespace: default
    resourceVersion: "983709"
    selfLink: /apis/apps/v1/namespaces/default/statefulsets/kafka
    uid: 2ef32c10-7fd3-403c-a1c6-3d626a484045
  spec:
    podManagementPolicy: Parallel
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: kafka
        app.kubernetes.io/instance: kafka
        app.kubernetes.io/name: kafka
    serviceName: kafka-headless
    template:
      metadata:
        annotations:
          checksum/scripts: a09ac38184b4f4a26b22c78f779d3a6d40dd23ad0d9e2981e90e12ffe92f6270
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: kafka
          app.kubernetes.io/instance: kafka
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kafka
          helm.sh/chart: kafka-22.1.3
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: kafka
                    app.kubernetes.io/instance: kafka
                    app.kubernetes.io/name: kafka
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - command:
          - /scripts/setup.sh
          env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: INTERNAL
          - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
            value: INTERNAL:PLAINTEXT,CLIENT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
          - name: KAFKA_CFG_LISTENERS
            value: INTERNAL://:9094,CLIENT://:9092,CONTROLLER://:9093,EXTERNAL://:9095
          - name: ALLOW_PLAINTEXT_LISTENER
            value: "yes"
          - name: KAFKA_ZOOKEEPER_PROTOCOL
            value: PLAINTEXT
          - name: KAFKA_VOLUME_DIR
            value: /bitnami/kafka
          - name: KAFKA_LOG_DIR
            value: /opt/bitnami/kafka/logs
          - name: KAFKA_CFG_DELETE_TOPIC_ENABLE
            value: "true"
          - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
            value: "true"
          - name: KAFKA_HEAP_OPTS
            value: -Xmx1024m -Xms1024m
          - name: KAFKA_CFG_LOG_FLUSH_INTERVAL_MESSAGES
            value: "10000"
          - name: KAFKA_CFG_LOG_FLUSH_INTERVAL_MS
            value: "1000"
          - name: KAFKA_CFG_LOG_RETENTION_BYTES
            value: "1073741824"
          - name: KAFKA_CFG_LOG_RETENTION_CHECK_INTERVAL_MS
            value: "300000"
          - name: KAFKA_CFG_LOG_RETENTION_HOURS
            value: "168"
          - name: KAFKA_CFG_MESSAGE_MAX_BYTES
            value: "1000012"
          - name: KAFKA_CFG_LOG_SEGMENT_BYTES
            value: "1073741824"
          - name: KAFKA_CFG_LOG_DIRS
            value: /bitnami/kafka/data
          - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR
            value: "1"
          - name: KAFKA_CFG_NUM_IO_THREADS
            value: "8"
          - name: KAFKA_CFG_NUM_NETWORK_THREADS
            value: "3"
          - name: KAFKA_CFG_NUM_PARTITIONS
            value: "1"
          - name: KAFKA_CFG_NUM_RECOVERY_THREADS_PER_DATA_DIR
            value: "1"
          - name: KAFKA_CFG_SOCKET_RECEIVE_BUFFER_BYTES
            value: "102400"
          - name: KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES
            value: "104857600"
          - name: KAFKA_CFG_SOCKET_SEND_BUFFER_BYTES
            value: "102400"
          - name: KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS
            value: "6000"
          - name: KAFKA_CFG_AUTHORIZER_CLASS_NAME
          - name: KAFKA_CFG_ALLOW_EVERYONE_IF_NO_ACL_FOUND
            value: "true"
          - name: KAFKA_CFG_SUPER_USERS
            value: User:admin
          - name: KAFKA_ENABLE_KRAFT
            value: "true"
          - name: KAFKA_KRAFT_CLUSTER_ID
            value: kafka_cluster_id_test1
          - name: KAFKA_CFG_PROCESS_ROLES
            value: broker,controller
          - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
            value: CONTROLLER
          image: docker.io/bitnami/kafka:3.4.0-debian-11-r33
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: kafka-client
            timeoutSeconds: 5
          name: kafka
          ports:
          - containerPort: 9092
            name: kafka-client
            protocol: TCP
          - containerPort: 9094
            name: kafka-internal
            protocol: TCP
          - containerPort: 9095
            name: kafka-external
            protocol: TCP
          - containerPort: 9093
            name: kafka-ctlr
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: kafka-client
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/kafka
            name: data
          - mountPath: /opt/bitnami/kafka/logs
            name: logs
          - mountPath: /scripts/setup.sh
            name: scripts
            subPath: setup.sh
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: kafka
        serviceAccountName: kafka
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 493
            name: kafka-scripts
          name: scripts
        - emptyDir: {}
          name: logs
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 3
    collisionCount: 0
    currentReplicas: 3
    currentRevision: kafka-79bbbc8db
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updateRevision: kafka-79bbbc8db
    updatedReplicas: 3
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: kafka
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2023-11-23T18:32:28Z"
    labels:
      app.kubernetes.io/component: kafka
      app.kubernetes.io/instance: kafka
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kafka
      helm.sh/chart: kafka-22.1.3
    name: kafka
    namespace: default
    resourceVersion: "983492"
    selfLink: /api/v1/namespaces/default/services/kafka
    uid: 533f8ee4-273d-406d-a91f-ff24f7dfe86c
  spec:
    clusterIP: 10.152.183.17
    clusterIPs:
    - 10.152.183.17
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-client
      port: 9092
      protocol: TCP
      targetPort: kafka-client
    - name: tcp-external
      port: 9095
      protocol: TCP
      targetPort: kafka-external
    selector:
      app.kubernetes.io/component: kafka
      app.kubernetes.io/instance: kafka
      app.kubernetes.io/name: kafka
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
